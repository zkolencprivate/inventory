{
	"name": "Sales Simulation",
	"properties": {
		"content": {
			"query": "select * from dwh.d_warehouses;\n--48 / 51\n\ntruncate table dwh.f_inventory;\n\nselect * from dwh.f_inventory;\n\n--simulate inventory in both warehouses,\ninsert into dwh.f_inventory (\n   inventory_id,\n   inventory_date,\n   product_code,\n   Warehouse_id,\n   Quantity,\n   Purchase_Date,\n   Transaction_Type,\n   Sell_Date,\n   Cost_Value,\n   Sell_Value,\n   DaysInWarehouse\n)\nselect\n  abs(CHECKSUM(random))\n, '2024-01-01' inventory_date\n, prod.product_code\n, case when prod.product_id < 1000 then 48 else 51 end Warehouse_id\n, ABS(CHECKSUM(random)) % 2500 + 7500 AS Quantity \n,'2023-12-31' Purchase_Date,\n'BUY' Transaction_Type\n,null Sell_Date\n, (ABS(CHECKSUM(random))%2500 + 7500) * prod.cost_price cost_value\n, null Sell_Value\n, 0 DaysInWarehouse\nfrom\n(\n    select p.*, NEWID() random from dwh.d_products p\n)\nprod;\n\n\nselect * from dwh.f_inventory;\n\nselect count(*) from dwh.d_products;\nselect count(*) from dbo.products;\n\ndelete from dwh.d_products where product_code in ('46861','24675','55968','12083');\n\nselect * from dwh.d_products order by product_code, startdate;\n\nselect product_code from dwh.d_products group by product_code having count(*)>1;\n\n\n\n-- Assuming you have a Sales_Simulation table with columns for inventory_id,customer_code,quantity,saledate\ntruncate table dwh.sales_simulation;\ncreate table dwh.sales_simulation (\n    inventory_id int,\n    customer_code varchar(128),\n    quantity int,\n    saledate date\n);\n\n\nselect * from dwh.d_products;\nupdate dwh.d_products set StartDate = '2023-12-31';\n\ninsert into dwh.Sales_Simulation (inventory_id,customer_code,quantity,saledate)\nSELECT \n    I.inventory_id, \n    c.customer_code, \n    -- Simulate a random quantity between 1 and 50\n    ABS(CHECKSUM(NEWID())) % 50 + 1 AS Quantity, \n    -- Simulate a random sale date within the last 365 days\n    --cast(DATEADD(day, ABS(CHECKSUM(NEWID())) % 365, GETDATE()+1) as date) AS SaleDate\n    cast(DATEADD(day, ABS(CHECKSUM(NEWID())) % 400, '2024-01-02') as date) AS SaleDate\nFROM \n    (SELECT TOP 1000 product_code,inventory_id FROM dwh.f_inventory ORDER BY NEWID()) AS I\nCROSS JOIN \n    (SELECT TOP 100 customer_code FROM dwh.d_customers ORDER BY NEWID()) AS C;\n\n\nselect count(*) from dwh.sales_simulation;\n--100 000\nselect saledate, count(*) from dwh.sales_simulation group by saledate order by saledate;\n\n\n/*\n--delete / restart simulation\ndelete from dwh.f_inventory  where Transaction_Type in('SELL','UNCHANGED')\ndelete from dwh.f_sales;\n*/\n\n\nDECLARE @datecounter date = cast('2024-01-02' as date);\n--WHILE @datecounter <= cast('2025-05-04' as date)\nWHILE @datecounter <= cast('2025-02-04' as date)\nBEGIN\n    PRINT @datecounter;\n    -- populate Sales table per day\n    insert into dwh.f_sales (SalesID,Inventory_ID,Customer_code,Quantity,Sell_Date,Total_Cost,Total_Sell_Value)\n        select \n                abs(CHECKSUM(newid()))\n            ,   ss.inventory_id\n            ,   ss.customer_code\n            ,   ss.quantity\n            ,   ss.saledate\n            ,   ss.quantity*prod.cost_price\n            ,   ss.quantity*prod.sell_price\n        from\n        (\n        select * from dwh.sales_simulation where saledate = @datecounter\n        ) ss\n        JOIN\n        (\n            select * from dwh.f_inventory where inventory_date =  DATEADD(DAY,-1,@datecounter)\n        ) inv\n        on ss.inventory_id = inv.inventory_id\n        join \n        (\n            select * from dwh.d_products where startdate <= @datecounter and enddate> @datecounter       \n        ) prod\n        on inv.product_code = prod.product_code;\n\n    --populate inventory diff for the observed date\n    insert into dwh.f_inventory (inventory_id,inventory_date,product_code,Warehouse_id,Quantity,Purchase_Date,Transaction_Type,Sell_Date,Cost_Value,Sell_Value,DaysInWarehouse)\n    select \n            inv.inventory_id inventory_id,\n            @datecounter inventory_date,\n            inv.product_code product_code,\n            inv.warehouse_id Warehouse_id,\n            inv.quantity - ss.total_quantity Quantity,\n            inv.Purchase_Date Purchase_Date,\n            'SELL' Transaction_Type,\n            ss.saledate Sell_Date,\n            ss.total_quantity*prod.cost_price     Cost_Value,\n            ss.total_quantity*prod.sell_price     Sell_Value,\n            DATEDIFF(day, inv.Purchase_Date, ss.saledate) DaysInWarehouse\n    from   \n    (\n        --must aggregate - diff customers buy the same product from inventory\n        select inventory_id, saledate, sum(quantity) total_quantity\n        from dwh.sales_simulation  \n        where saledate = @datecounter\n        group by inventory_id,saledate\n    ) ss\n    JOIN\n    (\n        select * from dwh.f_inventory where inventory_date =  DATEADD(DAY,-1,@datecounter)\n    ) inv\n    on ss.inventory_id = inv.inventory_id\n    join \n    (\n        select * from dwh.d_products where startdate <= @datecounter and enddate > @datecounter      \n    ) prod\n    on inv.product_code = prod.product_code;\n\n    --populate inventory diff for the observed date\n    insert into dwh.f_inventory (inventory_id,inventory_date,product_code,Warehouse_id,Quantity,Purchase_Date,Transaction_Type,Sell_Date,Cost_Value,Sell_Value,DaysInWarehouse)\n    select \n            inv.inventory_id inventory_id,\n            @datecounter inventory_date,\n            inv.product_code product_code,\n            inv.warehouse_id Warehouse_id,\n            inv.quantity Quantity,\n            inv.Purchase_Date Purchase_Date,\n            'UNCHANGED' Transaction_Type,\n            null Sell_Date,\n            inv.quantity*prod.cost_price     Cost_Value,\n            null     Sell_Value,\n            DATEDIFF(day, inv.Purchase_Date, @datecounter) DaysInWarehouse\n    from \n        --unchanged inventory items\n        (\n            select inventory_id from dwh.f_inventory where inventory_date =  DATEADD(DAY,-1, @datecounter)\n            EXCEPT\n            select inventory_id from dwh.f_inventory where inventory_date =  @datecounter\n        ) uc\n        JOIN\n        (\n            select * from dwh.f_inventory where inventory_date =  DATEADD(DAY,-1, @datecounter)\n        ) inv\n        on uc.inventory_id = inv.inventory_id\n        join \n        (\n            select * from dwh.d_products where startdate <= @datecounter and enddate > @datecounter     \n        ) prod\n        on inv.product_code = prod.product_code\n    ;\n\n    SET @datecounter = DATEADD(DAY,1,@datecounter);\nEND\n\n  \n/*  --sample data --    */\nselect * from dwh.Sales_Simulation where inventory_id = 635822456 order by saledate;\n\nselect * from dwh.f_sales where Sell_Date = '2024-05-05' and inventory_id = 635822456;\nselect * from dwh.f_inventory  where inventory_id = 635822456;\nselect * from dwh.f_inventory where inventory_date= '2024-05-05' and Transaction_Type = 'UNCHANGED' ;\n\n\nselect * from dwh.f_inventory where inventory_date= '2024-06-05';\nselect * from dwh.f_inventory  where inventory_id = 1187623378 order by inventory_date;\n\n        select \n                abs(CHECKSUM(newid()))\n            ,   ss.inventory_id\n            ,   ss.customer_code\n            ,   ss.quantity\n            ,   ss.saledate\n            ,   ss.quantity*prod.cost_price\n            ,   ss.quantity*prod.sell_price\n        from\n        (\n        select * from dwh.sales_simulation where saledate =  '2024-05-05' and inventory_id = 635822456\n        ) ss\n        JOIN\n        (\n            select * from dwh.f_inventory where inventory_date =  DATEADD(DAY,-1, '2024-05-05')\n        ) inv\n        on ss.inventory_id = inv.inventory_id\n        join \n        (\n            select * from dwh.d_products where startdate <=  '2024-05-05' and enddate>  '2024-05-05'     \n        ) prod\n        on inv.product_code = prod.product_code;\n\n\n  --populate inventory diff for the observed date\n    insert into dwh.f_inventory (inventory_id,inventory_date,product_code,Warehouse_id,Quantity,Purchase_Date,Transaction_Type,Sell_Date,Cost_Value,Sell_Value,DaysInWarehouse)\n    select \n            inv.inventory_id inventory_id,\n            '2024-05-05' inventory_date,\n            inv.product_code product_code,\n            inv.warehouse_id Warehouse_id,\n            inv.quantity Quantity,\n            inv.Purchase_Date Purchase_Date,\n            'UNCHANGED' Transaction_Type,\n            null Sell_Date,\n            inv.quantity*prod.cost_price     Cost_Value,\n            null     Sell_Value,\n            DATEDIFF(day, inv.Purchase_Date, '2024-05-05') DaysInWarehouse\n    from \n        --unchanged inventory items\n        (\n            select inventory_id from dwh.f_inventory where inventory_date =  DATEADD(DAY,-1, '2024-05-05')\n            EXCEPT\n            select inventory_id from dwh.f_inventory where inventory_date =  '2024-05-05'\n        ) uc\n        JOIN\n        (\n            select * from dwh.f_inventory where inventory_date =  DATEADD(DAY,-1,'2024-05-05')\n        ) inv\n        on uc.inventory_id = inv.inventory_id\n        join \n        (\n            select * from dwh.d_products where startdate <= '2024-05-05' and enddate > '2024-05-05'      \n        ) prod\n        on inv.product_code = prod.product_code\n    ;\n\nselect * from dwh.f_inventory where inventory_date= '2024-05-05' and Transaction_Type = 'UNCHANGED';",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}